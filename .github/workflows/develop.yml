jobs:
  build:
    continue-on-error: ${{ matrix.experimental }}
    permissions:
      contents: read
      id-token: write
      packages: write
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login on Docker Hub
        uses: docker/login-action@v2
        with:
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          cache: yarn
          node-version: '16'

      - name: Set up yarn
        run: |
          npm i -g yarn

      # - id: yarn-dir-cache
      #   name: Get Yarn cache directory
      #   run: |
      #     cd ./teste
      #     echo "name=dir::$(yarn cache dir)" >> $GITHUB_OUTPUT
      #     echo "name=dir::$(yarn cache dir)"

      # - name: Check node cache
      #   uses: actions/cache@v2
      #   with:
      #     key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      #     path: |
      #       ${{ steps.yarn-dir-cache.outputs.dir }}
      #     restore-keys: |
      #       ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      # - if: ${{ steps.cachestep.outputs.cache-hit != 'true' }}
      - name: install dependencies
        run: |
          cd ./teste/
          yarn install --frozen-lockfile

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
          push: false
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/pipeline:latest
          target: builder

    strategy:
      matrix:
        experimental: [true]
        os: [ubuntu-latest, windows-2019]

name: Docker
on:
  push:
    branches: ['master']
